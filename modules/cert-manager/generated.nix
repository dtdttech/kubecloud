# Generated cert-manager CRD types
# This file should be generated by nixidy but cert-manager CRDs have multiple documents
# For now, we'll use basic types and the module will handle CRD installation via Helm
{ lib, options, config, ... }:
with lib.types; let
  hasAttrNotNull = attr: set: lib.hasAttr attr set && set.${attr} != null;
in {
  # Certificate resource type
  applications.apps.certificates = lib.mkOption {
    type = attrsOf lib.types.anything;
    default = {};
    description = "Certificate resources";
  };

  # CertificateRequest resource type
  applications.apps.certificateRequests = lib.mkOption {
    type = attrsOf lib.types.anything;
    default = {};
    description = "CertificateRequest resources";
  };

  # Issuer resource type
  applications.apps.issuers = lib.mkOption {
    type = attrsOf lib.types.anything;
    default = {};
    description = "Issuer resources";
  };

  # ClusterIssuer resource type
  applications.apps.clusterIssuers = lib.mkOption {
    type = attrsOf lib.types.anything;
    default = {};
    description = "ClusterIssuer resources";
  };

  # Order resource type (ACME)
  applications.apps.orders = lib.mkOption {
    type = attrsOf lib.types.anything;
    default = {};
    description = "Order resources";
  };

  # Challenge resource type (ACME)
  applications.apps.challenges = lib.mkOption {
    type = attrsOf lib.types.anything;
    default = {};
    description = "Challenge resources";
  };
}